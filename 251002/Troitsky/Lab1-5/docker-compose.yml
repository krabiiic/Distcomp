version: '3.8'

services:
  main-app:
    container_name: app-container
    build:
      context: .
      dockerfile: Lab1.Web/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://*:8080
      - REDIS=redis:6379
      - CONNECTION_STRING=Host=db;Port=5432;Database=distcomp;Username=postgres;Password=postgres
    ports:
      - "24110:8080"
    depends_on:
      kafka:
        condition: service_healthy

  db:
    container_name: postgres-database
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "distcomp"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  message-app:
    container_name: post-container
    build:
      context: .
      dockerfile: Lab3.PostService/Dockerfile
    environment:
      #- REDIS=redis:6379
      - ASPNETCORE_URLS=http://*:8081
      - CONNECTION_STRING=mongodb://mongodb:27017
      - DB_NAME=distcomp
    ports:
      - "24130:8081"
    depends_on:
      - main-app

  redis:
    image: redis:alpine
    container_name: fitness-tracker-redis
    command: redis-server --appendonly yes

  mongodb:
    image: mongo
    container_name: mongo-db
    ports:
      - "9042:27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ ping: 1 })'"]
      interval: 10s
      timeout: 5s
      retries: 5


  migration-tool:
    build:
      context: .
      dockerfile: Lab1.MigrationTool/Dockerfile
    environment:
    - CONNECTION_STRING=Host=db;Port=5432;Database=distcomp;Username=postgres;Password=postgres
    depends_on:
      db:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 zookeeper 2181"]
      interval: 5s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 10s
      retries: 4



