services:
  publisher:
    build:
      context: ./publisher
    container_name: publisher
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/distcomp
    ports:
      - "24110:24110"
    volumes:
      - ./publisher/src:/app/src
    depends_on:
      - redis

  db:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distcomp
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  khmelov:
    image: khmelov/distcomp 
    ports: 
      - "24100:24100"

  discussion:
    build:
      context: ./discussion
    container_name: discussion
    # Если нужно указывать какие-то переменные окружения для подключения к Cassandra:
    # environment:
    #   CASSANDRA_HOST: cassandra
    #   CASSANDRA_PORT: 9042
    ports:
      - "24130:24130"
    depends_on:
      - cassandra
    volumes:
      - ./discussion/src:/app/src

  # -- (опционально) Cassandra, если вы хотите поднять её в Docker --
  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"

  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]