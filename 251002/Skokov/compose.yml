services:
  khmelov:
    image: khmelov/distcomp 
    ports: 
      - "24100:24100"

  # laba 1
  # laba1:
  #   build: ./laba1
  #   container_name: laba1
  #   ports:
  #     - "24110:24110"
  #   volumes:
  #     - ./laba1:/app


  # laba 2
  db:
    image: postgres:latest
    container_name: postgres_fast_api
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distcomp
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d distcomp" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  laba2:
    build: ./laba2
    container_name: laba2
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/distcomp
    ports:
      - "24110:24110"
    volumes:
      - ./laba2:/app
    depends_on:
      - db
      - broker


  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=MyCassandraCluster

    volumes:
      - cassandra-data:/var/lib/cassandra


  # kafka-test:
  #   build: ./kafkaTest
  #   container_name: kafkaTest


  # laba3:
  #   build: ./laba3
  #   container_name: laba3
  #   ports:
  #     - "24130:24130"
  #   volumes:
  #     - ./laba3:/app
  #   depends_on:
  #     - cassandra

  # kafka:
  #   image: bitnami/kafka:latest
  #   container_name: kafka
  #   ports:
  #     - 9092:9092
  #   environment:
  #     - KAFKA_ENABLE_KRAFT=yes
  #     - KAFKA_CFG_PROCESS_ROLES=broker,controller
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:2181
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_NODE_ID=1
  #     - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
  #   volumes:
  #     - ./kafka:/bitnami/kafka


  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

  # broker:
  #   image: apache/kafka:latest
  #   hostname: broker
  #   container_name: broker
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_NUM_PARTITIONS: 1  # Или другое нужное вам число
  #     KAFKA_DEFAULT_REPLICATION_FACTOR: 1
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_NODE_ID: 1
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
  #     KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
  #     CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

  # broker:
  #   image: apache/kafka:latest
  #   hostname: broker
  #   container_name: broker
  #   ports:
  #     - "9092:9092"
  #   # volumes:
  #   #   - broker-data:/tmp/kraft-combined-logs  # Сохраняем данные между перезапусками
  #   #   - ./kafka-config:/etc/kafka/  # Монтируем кастомный конфиг (опционально)
  #   environment:
  #     # Жёстко фиксим 1 партицию везде
  #     KAFKA_NUM_PARTITIONS: 1
  #     KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
  #     KAFKA_DEFAULT_REPLICATION_FACTOR: 1
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"  # Выключаем автосоздание топиков нахуй
      
  #     # Остальные настройки (KRaft mode)
  #     KAFKA_PROCESS_ROLES: broker,controller
  #     KAFKA_NODE_ID: 1
  #     KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
  #     KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
  #     KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
  #     CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk


  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  pgdata:
  cassandra-data:
  # kafka:
  redis_data:
  # broker-data: 


      